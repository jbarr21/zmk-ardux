name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    strategy:
      fail-fast: false
      matrix:
        include:
          - board: nice_nano_v2
            shield: the_paintbrush_right nice_view_adapter nice_view
    steps:
      - name: Prepare variables
        shell: sh -x {0}
        env:
          shield: ${{ matrix.shield }}
        run: |
          echo "zephyr_version=${ZEPHYR_VERSION}" >> $GITHUB_ENV
          echo "extra_cmake_args=${shield:+-DSHIELD=\"$shield\"}" >> $GITHUB_ENV
          echo "display_name=${shield:+$shield - }${{ matrix.board }}" >> $GITHUB_ENV
          echo "artifact_name=${shield:+$shield-}${{ matrix.board }}-zmk" | tr " " "-" | tr -s "-" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache west modules
        uses: actions/cache@v3.0.11
        continue-on-error: true
        env:
          cache_name: cache-zephyr-${{ env.zephyr_version }}-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache_name }}-${{ hashFiles('**/west.yml', '**/build.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache_name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Initialize workspace (west init)
        run: west init -l config
      - name: Update modules (west update)
        run: west update
      - name: Export Zephyr CMake package (west zephyr-export)
        run: west zephyr-export

      - name: West Build (${{ env.display_name }})
        shell: sh -x {0}
        run: west build -s zmk/app -b "${{ matrix.board }}" -- -DZMK_CONFIG="${GITHUB_WORKSPACE}/config" ${{ env.extra_cmake_args }} ${{ matrix.cmake-args }}

      - name: ARDUX implementation dtsi file
        if: always()
        run: cat -n config/ardux.dtsi

      - name: Rename artifacts
        shell: sh -x {0}
        run: |
          cp config/ardux.dtsi ./ardux.dtsi
          cp build/zephyr/zmk.hex "${{ env.artifact_name }}-zmk-ardux.hex"
          cp build/zephyr/zmk.uf2 "${{ env.artifact_name }}-zmk-ardux.uf2"

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ env.artifact_name }}'
          path: |
            ardux.dtsi
            *.dts.pre.tmp
            *.hex
            *.uf2
            *.bin
        continue-on-error: true
 
